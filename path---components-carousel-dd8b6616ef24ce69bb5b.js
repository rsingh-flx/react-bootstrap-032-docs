webpackJsonp([0x5e8232189b65],{754:function(l,e){l.exports={data:{carousel:{composes:null,displayName:"Carousel",description:null,props:[{name:"slide",doclets:{type:null,controllable:null},defaultValue:{value:"true",computed:!1},description:null,required:!1,type:{name:"bool",value:null,raw:null}},{name:"indicators",doclets:{type:null,controllable:null},defaultValue:{value:"true",computed:!1},description:null,required:!1,type:{name:"bool",value:null,raw:null}},{name:"interval",doclets:{type:null,controllable:null},defaultValue:{value:"5000",computed:!1},description:{childMarkdownRemark:{html:"<p>The amount of time to delay between automatically cycling an item.\nIf <code>null</code>, carousel will not automatically cycle.</p>"}},required:!1,type:{name:"number",value:null,raw:null}},{name:"controls",doclets:{type:null,controllable:null},defaultValue:{value:"true",computed:!1},description:null,required:!1,type:{name:"bool",value:null,raw:null}},{name:"pauseOnHover",doclets:{type:null,controllable:null},defaultValue:{value:"true",computed:!1},description:null,required:!1,type:{name:"bool",value:null,raw:null}},{name:"wrap",doclets:{type:null,controllable:null},defaultValue:{value:"true",computed:!1},description:null,required:!1,type:{name:"bool",value:null,raw:null}},{name:"onSelect",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:'<p>Callback fired when the active item changes.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token punctuation">(</span>eventKey<span class="token punctuation">:</span> any<span class="token punctuation">,</span> <span class="token operator">?</span>event<span class="token punctuation">:</span> Object<span class="token punctuation">)</span> <span class="token operator">=></span> any\n</code></pre>\n      </div>\n<p>If this callback takes two or more arguments, the second argument will\nbe a persisted event object with <code>direction</code> set to the direction of the\ntransition.</p>'}},required:!1,type:{name:"func",value:null,raw:null}},{name:"onSlideEnd",doclets:{type:null,controllable:null},defaultValue:null,description:null,required:!1,type:{name:"func",value:null,raw:null}},{name:"activeIndex",doclets:{type:null,controllable:null},defaultValue:null,description:null,required:!1,type:{name:"number",value:null,raw:null}},{name:"defaultActiveIndex",doclets:{type:null,controllable:null},defaultValue:null,description:null,required:!1,type:{name:"number",value:null,raw:null}},{name:"direction",doclets:{type:null,controllable:null},defaultValue:null,description:null,required:!1,type:{name:"enum",value:[{value:"'prev'",computed:!1},{value:"'next'",computed:!1}],raw:null}},{name:"prevIcon",doclets:{type:null,controllable:null},defaultValue:{value:'<Glyphicon glyph="chevron-left" />',computed:!1},description:null,required:!1,type:{name:"node",value:null,raw:null}},{name:"prevLabel",doclets:{type:null,controllable:null},defaultValue:{value:"'Previous'",computed:!1},description:{childMarkdownRemark:{html:"<p>Label shown to screen readers only, can be used to show the previous element\nin the carousel.\nSet to null to deactivate.</p>"}},required:!1,type:{name:"string",value:null,raw:null}},{name:"nextIcon",doclets:{type:null,controllable:null},defaultValue:{value:'<Glyphicon glyph="chevron-right" />',computed:!1},description:null,required:!1,type:{name:"node",value:null,raw:null}},{name:"nextLabel",doclets:{type:null,controllable:null},defaultValue:{value:"'Next'",computed:!1},description:{childMarkdownRemark:{html:"<p>Label shown to screen readers only, can be used to show the next element\nin the carousel.\nSet to null to deactivate.</p>"}},required:!1,type:{name:"string",value:null,raw:null}},{name:"bsClass",doclets:{type:null,controllable:null},defaultValue:{value:"'carousel'",computed:null},description:{childMarkdownRemark:{html:"<p>Base CSS class and prefix for the component. Generally one should only change <code>bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},required:!1,type:{name:"string",value:null,raw:null}}]},item:{composes:null,displayName:"CarouselItem",description:null,props:[{name:"direction",doclets:{type:null,controllable:null},defaultValue:null,description:null,required:!1,type:{name:"enum",value:[{value:"'prev'",computed:!1},{value:"'next'",computed:!1}],raw:null}},{name:"onAnimateOutEnd",doclets:{type:null,controllable:null},defaultValue:null,description:null,required:!1,type:{name:"func",value:null,raw:null}},{name:"active",doclets:{type:null,controllable:null},defaultValue:{value:"false",computed:!1},description:null,required:!1,type:{name:"bool",value:null,raw:null}},{name:"animateIn",doclets:{type:null,controllable:null},defaultValue:{value:"false",computed:!1},description:null,required:!1,type:{name:"bool",value:null,raw:null}},{name:"animateOut",doclets:{type:null,controllable:null},defaultValue:{value:"false",computed:!1},description:null,required:!1,type:{name:"bool",value:null,raw:null}},{name:"index",doclets:{type:null,controllable:null},defaultValue:null,description:null,required:!1,type:{name:"number",value:null,raw:null}}]},caption:{composes:null,displayName:"CarouselCaption",description:null,props:[{name:"componentClass",doclets:{type:null,controllable:null},defaultValue:{value:"'div'",computed:!1},description:{childMarkdownRemark:{html:"<p>You can use a custom element type for this component.</p>"}},required:!1,type:{name:"custom",value:null,raw:"elementType"}},{name:"bsClass",doclets:{type:null,controllable:null},defaultValue:{value:"'carousel-caption'",computed:null},description:{childMarkdownRemark:{html:"<p>Base CSS class and prefix for the component. Generally one should only change <code>bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},required:!1,type:{name:"string",value:null,raw:null}}]}},pathContext:{}}}});
//# sourceMappingURL=path---components-carousel-dd8b6616ef24ce69bb5b.js.map