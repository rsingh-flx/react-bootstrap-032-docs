webpackJsonp([0xf91afddd15a],{764:function(e,l){e.exports={data:{Nav:{composes:null,displayName:"Nav",description:null,props:[{name:"activeKey",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:"<p>Marks the NavItem with a matching <code>eventKey</code> as active. Has a\nhigher precedence over <code>activeHref</code>.</p>"}},required:!1,type:{name:"any",value:null,raw:null}},{name:"activeHref",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:"<p>Marks the child NavItem with a matching <code>href</code> prop as active.</p>"}},required:!1,type:{name:"string",value:null,raw:null}},{name:"stacked",doclets:{type:null,controllable:null},defaultValue:{value:"false",computed:!1},description:{childMarkdownRemark:{html:"<p>NavItems are be positioned vertically.</p>"}},required:!1,type:{name:"bool",value:null,raw:null}},{name:"justified",doclets:{type:null,controllable:null},defaultValue:{value:"false",computed:!1},description:null,required:!1,type:{name:"custom",value:null,raw:"all(\r\n  PropTypes.bool,\r\n  ({ justified, navbar }) =>\r\n    justified && navbar\r\n      ? Error('justified navbar `Nav`s are not supported')\r\n      : null\r\n)"}},{name:"onSelect",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:'<p>A callback fired when a NavItem is selected.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token keyword">function</span> <span class="token punctuation">(</span>\n Any eventKey<span class="token punctuation">,</span>\n SyntheticEvent event<span class="token operator">?</span>\n<span class="token punctuation">)</span>\n</code></pre>\n      </div>'}},required:!1,type:{name:"func",value:null,raw:null}},{name:"role",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:'<p>ARIA role for the Nav, in the context of a TabContainer, the default will\nbe set to "tablist", but can be overridden by the Nav when set explicitly.</p>\n<p>When the role is set to "tablist" NavItem focus is managed according to\nthe ARIA authoring practices for tabs:\n<a href="https://www.w3.org/TR/2013/WD-wai-aria-practices-20130307/#tabpanel">https://www.w3.org/TR/2013/WD-wai-aria-practices-20130307/#tabpanel</a></p>'}},required:!1,type:{name:"string",value:null,raw:null}},{name:"navbar",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:"<p>Apply styling an alignment for use in a Navbar. This prop will be set\nautomatically when the Nav is used inside a Navbar.</p>"}},required:!1,type:{name:"bool",value:null,raw:null}},{name:"pullRight",doclets:{type:null,controllable:null},defaultValue:{value:"false",computed:!1},description:{childMarkdownRemark:{html:"<p>Float the Nav to the right. When <code>navbar</code> is <code>true</code> the appropriate\ncontextual classes are added as well.</p>"}},required:!1,type:{name:"bool",value:null,raw:null}},{name:"pullLeft",doclets:{type:null,controllable:null},defaultValue:{value:"false",computed:!1},description:{childMarkdownRemark:{html:"<p>Float the Nav to the left. When <code>navbar</code> is <code>true</code> the appropriate\ncontextual classes are added as well.</p>"}},required:!1,type:{name:"bool",value:null,raw:null}},{name:"bsStyle",doclets:{type:null,controllable:null},defaultValue:{value:null,computed:null},description:{childMarkdownRemark:{html:"<p>Component visual or contextual style variants.</p>"}},required:!1,type:{name:"enum",value:[{value:'"tabs"'},{value:'"pills"'}],raw:null}},{name:"bsClass",doclets:{type:null,controllable:null},defaultValue:{value:"'nav'",computed:null},description:{childMarkdownRemark:{html:"<p>Base CSS class and prefix for the component. Generally one should only change <code>bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},required:!1,type:{name:"string",value:null,raw:null}}]},NavItem:{composes:null,displayName:"NavItem",description:null,props:[{name:"active",doclets:{type:null,controllable:null},defaultValue:{value:"false",computed:!1},description:null,required:!1,type:{name:"bool",value:null,raw:null}},{name:"disabled",doclets:{type:null,controllable:null},defaultValue:{value:"false",computed:!1},description:null,required:!1,type:{name:"bool",value:null,raw:null}},{name:"role",doclets:{type:null,controllable:null},defaultValue:null,description:null,required:!1,type:{name:"string",value:null,raw:null}},{name:"href",doclets:{type:null,controllable:null},defaultValue:null,description:null,required:!1,type:{name:"string",value:null,raw:null}},{name:"onClick",doclets:{type:null,controllable:null},defaultValue:null,description:null,required:!1,type:{name:"func",value:null,raw:null}},{name:"onSelect",doclets:{type:null,controllable:null},defaultValue:null,description:null,required:!1,type:{name:"func",value:null,raw:null}},{name:"eventKey",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:"<p>A unique identifier for the Component, the <code>eventKey</code> makes it distinguishable from others in a set. Similar to React's <code>key</code> prop, in that it only needs to be unique amoungst the Components siblings, not globally.</p>"}},required:!1,type:{name:"any",value:null,raw:null}}]}},pathContext:{}}}});
//# sourceMappingURL=path---components-navs-d1a3f2cef2f3372462d7.js.map