webpackJsonp([0xacbf08f6de4c],{772:function(e,l){e.exports={data:{Tabs:{composes:null,displayName:"Tabs",description:null,props:[{name:"activeKey",doclets:{type:null,controllable:"onSelect"},defaultValue:null,description:{childMarkdownRemark:{html:"<p>Mark the Tab with a matching <code>eventKey</code> as active.</p>"}},required:!1,type:{name:"any",value:null,raw:null}},{name:"bsStyle",doclets:{type:null,controllable:null},defaultValue:{value:"'tabs'",computed:!1},description:{childMarkdownRemark:{html:"<p>Navigation style</p>"}},required:!1,type:{name:"enum",value:[{value:"'tabs'",computed:!1},{value:"'pills'",computed:!1}],raw:null}},{name:"animation",doclets:{type:null,controllable:null},defaultValue:{value:"true",computed:!1},description:null,required:!1,type:{name:"bool",value:null,raw:null}},{name:"id",doclets:{type:null,controllable:null},defaultValue:null,description:null,required:!1,type:{name:"custom",value:null,raw:"requiredForA11y(\r\n  PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n)"}},{name:"onSelect",doclets:{type:null,controllable:"activeKey"},defaultValue:null,description:{childMarkdownRemark:{html:'<p>Callback fired when a Tab is selected.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token keyword">function</span> <span class="token punctuation">(</span>\n  Any eventKey<span class="token punctuation">,</span>\n  SyntheticEvent event<span class="token operator">?</span>\n<span class="token punctuation">)</span>\n</code></pre>\n      </div>'}},required:!1,type:{name:"func",value:null,raw:null}},{name:"mountOnEnter",doclets:{type:null,controllable:null},defaultValue:{value:"false",computed:!1},description:{childMarkdownRemark:{html:'<p>Wait until the first "enter" transition to mount tabs (add them to the DOM)</p>'}},required:!1,type:{name:"bool",value:null,raw:null}},{name:"unmountOnExit",doclets:{type:null,controllable:null},defaultValue:{value:"false",computed:!1},description:{childMarkdownRemark:{html:"<p>Unmount tabs (remove it from the DOM) when it is no longer visible</p>"}},required:!1,type:{name:"bool",value:null,raw:null}}]},Tab:{composes:["./TabPane"],displayName:"Tab",description:null,props:[{name:"disabled",doclets:{type:null,controllable:null},defaultValue:null,description:null,required:!1,type:{name:"bool",value:null,raw:null}},{name:"title",doclets:{type:null,controllable:null},defaultValue:null,description:null,required:!1,type:{name:"node",value:null,raw:null}},{name:"tabClassName",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:"<p>tabClassName is used as className for the associated NavItem</p>"}},required:!1,type:{name:"string",value:null,raw:null}},{name:"bsClass",doclets:{type:null,controllable:null},defaultValue:{value:null,computed:null},description:{childMarkdownRemark:{html:"<p>Base CSS class and prefix for the component. Generally one should only change <code>bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},required:!1,type:{name:"string",value:null,raw:null}}]},TabContainer:{composes:null,displayName:"TabContainer",description:null,props:[{name:"id",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:"<p>HTML id attribute, required if no <code>generateChildId</code> prop\nis specified.</p>"}},required:!1,type:{name:"custom",value:null,raw:"function(props, ...args) {\r\n  let error = null;\r\n\r\n  if (!props.generateChildId) {\r\n    error = idPropType(props, ...args);\r\n\r\n    if (!error && !props.id) {\r\n      error = new Error(\r\n        'In order to properly initialize Tabs in a way that is accessible ' +\r\n          'to assistive technologies (such as screen readers) an `id` or a ' +\r\n          '`generateChildId` prop to TabContainer is required'\r\n      );\r\n    }\r\n  }\r\n\r\n  return error;\r\n}"}},{name:"generateChildId",doclets:{type:null,controllable:null},defaultValue:{value:"(eventKey, type) => `${this.props.id}-${type}-${key}`",computed:!1},description:{childMarkdownRemark:{html:'<p>A function that takes an <code>eventKey</code> and <code>type</code> and returns a unique id for\nchild tab <code>&#x3C;NavItem></code>s and <code>&#x3C;TabPane></code>s. The function <em>must</em> be a pure\nfunction, meaning it should always return the <em>same</em> id for the same set\nof inputs. The default value requires that an <code>id</code> to be set for the\n<code>&#x3C;TabContainer></code>.</p>\n<p>The <code>type</code> argument will either be <code>"tab"</code> or <code>"pane"</code>.</p>'}},required:!1,type:{name:"func",value:null,raw:null}},{name:"onSelect",doclets:{type:null,controllable:"activeKey"},defaultValue:null,description:{childMarkdownRemark:{html:"<p>A callback fired when a tab is selected.</p>"}},required:!1,type:{name:"func",value:null,raw:null}},{name:"activeKey",doclets:{type:null,controllable:"onSelect"},defaultValue:null,description:{childMarkdownRemark:{html:"<p>The <code>eventKey</code> of the currently active tab.</p>"}},required:!1,type:{name:"any",value:null,raw:null}}]},TabContent:{composes:null,displayName:"TabContent",description:null,props:[{name:"componentClass",doclets:{type:null,controllable:null},defaultValue:{value:"'div'",computed:!1},description:{childMarkdownRemark:{html:"<p>You can use a custom element type for this component.</p>"}},required:!1,type:{name:"custom",value:null,raw:"elementType"}},{name:"animation",doclets:{type:null,controllable:null},defaultValue:{value:"true",computed:!1},description:{childMarkdownRemark:{html:"<p>Sets a default animation strategy for all children <code>&#x3C;TabPane></code>s. Use\n<code>false</code> to disable, <code>true</code> to enable the default <code>&#x3C;Fade></code> animation or\na react-transition-group v2 <code>&#x3C;Transition/></code> component.</p>"}},required:!1,type:{name:"union",value:[{name:"bool"},{name:"custom",raw:"elementType"}],raw:null}},{name:"mountOnEnter",doclets:{type:null,controllable:null},defaultValue:{value:"false",computed:!1},description:{childMarkdownRemark:{html:'<p>Wait until the first "enter" transition to mount tabs (add them to the DOM)</p>'}},required:!1,type:{name:"bool",value:null,raw:null}},{name:"unmountOnExit",doclets:{type:null,controllable:null},defaultValue:{value:"false",computed:!1},description:{childMarkdownRemark:{html:"<p>Unmount tabs (remove it from the DOM) when they are no longer visible</p>"}},required:!1,type:{name:"bool",value:null,raw:null}},{name:"bsClass",doclets:{type:null,controllable:null},defaultValue:{value:"'tab'",computed:null},description:{childMarkdownRemark:{html:"<p>Base CSS class and prefix for the component. Generally one should only change <code>bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},required:!1,type:{name:"string",value:null,raw:null}}]},TabPane:{composes:null,displayName:"TabPane",description:null,props:[{name:"eventKey",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:"<p>Uniquely identify the <code>&#x3C;TabPane></code> among its siblings.</p>"}},required:!1,type:{name:"any",value:null,raw:null}},{name:"animation",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:"<p>Use animation when showing or hiding <code>&#x3C;TabPane></code>s. Use <code>false</code> to disable,\n<code>true</code> to enable the default <code>&#x3C;Fade></code> animation or\na react-transition-group v2 <code>&#x3C;Transition/></code> component.</p>"}},required:!1,type:{name:"union",value:[{name:"bool"},{name:"custom",raw:"elementType"}],raw:null}},{name:"id",doclets:{type:null,controllable:null},defaultValue:null,description:null,required:!1,type:{name:"string",value:null,raw:null}},{name:"aria-labelledby",doclets:{type:null,controllable:null},defaultValue:null,description:null,required:!1,type:{name:"string",value:null,raw:null}},{name:"bsClass",doclets:{type:null,controllable:null},defaultValue:{value:"'tab-pane'",computed:null},description:{childMarkdownRemark:{html:"<p>Base CSS class and prefix for the component. Generally one should only change <code>bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},required:!1,type:{name:"string",value:null,raw:null}},{name:"onEnter",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:"<p>Transition onEnter callback when animation is not <code>false</code></p>"}},required:!1,type:{name:"func",value:null,raw:null}},{name:"onEntering",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:"<p>Transition onEntering callback when animation is not <code>false</code></p>"}},required:!1,type:{name:"func",value:null,raw:null}},{name:"onEntered",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:"<p>Transition onEntered callback when animation is not <code>false</code></p>"}},required:!1,type:{name:"func",value:null,raw:null}},{name:"onExit",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:"<p>Transition onExit callback when animation is not <code>false</code></p>"}},required:!1,type:{name:"func",value:null,raw:null}},{name:"onExiting",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:"<p>Transition onExiting callback when animation is not <code>false</code></p>"}},required:!1,type:{name:"func",value:null,raw:null}},{name:"onExited",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:"<p>Transition onExited callback when animation is not <code>false</code></p>"}},required:!1,type:{name:"func",value:null,raw:null}},{name:"mountOnEnter",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:'<p>Wait until the first "enter" transition to mount the tab (add it to the DOM)</p>'}},required:!1,type:{name:"bool",value:null,raw:null}},{name:"unmountOnExit",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:"<p>Unmount the tab (remove it from the DOM) when it is no longer visible</p>"}},required:!1,type:{name:"bool",value:null,raw:null}}]}},pathContext:{}}}});
//# sourceMappingURL=path---components-tabs-f7c306d1d56d04d22f6c.js.map