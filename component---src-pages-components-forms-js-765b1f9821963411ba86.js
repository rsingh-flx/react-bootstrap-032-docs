webpackJsonp([0x950bc7c05bb8],{415:function(e,t){"use strict";e.exports="class FormExample extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = {\r\n      value: ''\r\n    };\r\n  }\r\n\r\n  getValidationState() {\r\n    const length = this.state.value.length;\r\n    if (length > 10) return 'success';\r\n    else if (length > 5) return 'warning';\r\n    else if (length > 0) return 'error';\r\n    return null;\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ value: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form>\r\n        <FormGroup\r\n          controlId=\"formBasicText\"\r\n          validationState={this.getValidationState()}\r\n        >\r\n          <ControlLabel>Working example with validation</ControlLabel>\r\n          <FormControl\r\n            type=\"text\"\r\n            value={this.state.value}\r\n            placeholder=\"Enter text\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <FormControl.Feedback />\r\n          <HelpBlock>Validation is based on string length.</HelpBlock>\r\n        </FormGroup>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<FormExample />);\r\n"},416:function(e,t){"use strict";e.exports='function FieldGroup({ id, label, help, ...props }) {\r\n  return (\r\n    <FormGroup controlId={id}>\r\n      <ControlLabel>{label}</ControlLabel>\r\n      <FormControl {...props} />\r\n      {help && <HelpBlock>{help}</HelpBlock>}\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nconst formInstance = (\r\n  <form>\r\n    <FieldGroup\r\n      id="formControlsText"\r\n      type="text"\r\n      label="Text"\r\n      placeholder="Enter text"\r\n    />\r\n    <FieldGroup\r\n      id="formControlsEmail"\r\n      type="email"\r\n      label="Email address"\r\n      placeholder="Enter email"\r\n    />\r\n    <FieldGroup id="formControlsPassword" label="Password" type="password" />\r\n    <FieldGroup\r\n      id="formControlsFile"\r\n      type="file"\r\n      label="File"\r\n      help="Example block-level help text here."\r\n    />\r\n\r\n    <Checkbox checked readOnly>\r\n      Checkbox\r\n    </Checkbox>\r\n    <Radio checked readOnly>\r\n      Radio\r\n    </Radio>\r\n\r\n    <FormGroup>\r\n      <Checkbox inline>1</Checkbox> <Checkbox inline>2</Checkbox>{\' \'}\r\n      <Checkbox inline>3</Checkbox>\r\n    </FormGroup>\r\n    <FormGroup>\r\n      <Radio name="radioGroup" inline>\r\n        1\r\n      </Radio>{\' \'}\r\n      <Radio name="radioGroup" inline>\r\n        2\r\n      </Radio>{\' \'}\r\n      <Radio name="radioGroup" inline>\r\n        3\r\n      </Radio>\r\n    </FormGroup>\r\n\r\n    <FormGroup controlId="formControlsSelect">\r\n      <ControlLabel>Select</ControlLabel>\r\n      <FormControl componentClass="select" placeholder="select">\r\n        <option value="select">select</option>\r\n        <option value="other">...</option>\r\n      </FormControl>\r\n    </FormGroup>\r\n    <FormGroup controlId="formControlsSelectMultiple">\r\n      <ControlLabel>Multiple select</ControlLabel>\r\n      <FormControl componentClass="select" multiple>\r\n        <option value="select">select (multiple)</option>\r\n        <option value="other">...</option>\r\n      </FormControl>\r\n    </FormGroup>\r\n\r\n    <FormGroup controlId="formControlsTextarea">\r\n      <ControlLabel>Textarea</ControlLabel>\r\n      <FormControl componentClass="textarea" placeholder="textarea" />\r\n    </FormGroup>\r\n\r\n    <FormGroup>\r\n      <ControlLabel>Static text</ControlLabel>\r\n      <FormControl.Static>email@example.com</FormControl.Static>\r\n    </FormGroup>\r\n\r\n    <Button type="submit">Submit</Button>\r\n  </form>\r\n);\r\n\r\nrender(formInstance);\r\n'},417:function(e,t){"use strict";e.exports='<Form horizontal>\r\n  <FormGroup controlId="formHorizontalEmail">\r\n    <Col componentClass={ControlLabel} sm={2}>\r\n      Email\r\n    </Col>\r\n    <Col sm={10}>\r\n      <FormControl type="email" placeholder="Email" />\r\n    </Col>\r\n  </FormGroup>\r\n\r\n  <FormGroup controlId="formHorizontalPassword">\r\n    <Col componentClass={ControlLabel} sm={2}>\r\n      Password\r\n    </Col>\r\n    <Col sm={10}>\r\n      <FormControl type="password" placeholder="Password" />\r\n    </Col>\r\n  </FormGroup>\r\n\r\n  <FormGroup>\r\n    <Col smOffset={2} sm={10}>\r\n      <Checkbox>Remember me</Checkbox>\r\n    </Col>\r\n  </FormGroup>\r\n\r\n  <FormGroup>\r\n    <Col smOffset={2} sm={10}>\r\n      <Button type="submit">Sign in</Button>\r\n    </Col>\r\n  </FormGroup>\r\n</Form>;\r\n'},418:function(e,t){"use strict";e.exports='<Form inline>\r\n  <FormGroup controlId="formInlineName">\r\n    <ControlLabel>Name</ControlLabel>{\' \'}\r\n    <FormControl type="text" placeholder="Jane Doe" />\r\n  </FormGroup>{\' \'}\r\n  <FormGroup controlId="formInlineEmail">\r\n    <ControlLabel>Email</ControlLabel>{\' \'}\r\n    <FormControl type="email" placeholder="jane.doe@example.com" />\r\n  </FormGroup>{\' \'}\r\n  <Button type="submit">Send invitation</Button>\r\n</Form>;\r\n'},419:function(e,t){"use strict";e.exports='<form>\r\n  <FormGroup>\r\n    <InputGroup>\r\n      <InputGroup.Addon>@</InputGroup.Addon>\r\n      <FormControl type="text" />\r\n    </InputGroup>\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <InputGroup>\r\n      <FormControl type="text" />\r\n      <InputGroup.Addon>.00</InputGroup.Addon>\r\n    </InputGroup>\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <InputGroup>\r\n      <InputGroup.Addon>$</InputGroup.Addon>\r\n      <FormControl type="text" />\r\n      <InputGroup.Addon>.00</InputGroup.Addon>\r\n    </InputGroup>\r\n  </FormGroup>\r\n\r\n  <FormGroup>\r\n    <InputGroup>\r\n      <FormControl type="text" />\r\n      <InputGroup.Addon>\r\n        <Glyphicon glyph="music" />\r\n      </InputGroup.Addon>\r\n    </InputGroup>\r\n  </FormGroup>\r\n\r\n  <FormGroup>\r\n    <InputGroup>\r\n      <InputGroup.Button>\r\n        <Button>Before</Button>\r\n      </InputGroup.Button>\r\n      <FormControl type="text" />\r\n    </InputGroup>\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <InputGroup>\r\n      <FormControl type="text" />\r\n      <DropdownButton\r\n        componentClass={InputGroup.Button}\r\n        id="input-dropdown-addon"\r\n        title="Action"\r\n      >\r\n        <MenuItem key="1">Item</MenuItem>\r\n      </DropdownButton>\r\n    </InputGroup>\r\n  </FormGroup>\r\n\r\n  <FormGroup>\r\n    <InputGroup>\r\n      <InputGroup.Addon>\r\n        <input type="radio" aria-label="..." />\r\n      </InputGroup.Addon>\r\n      <FormControl type="text" />\r\n    </InputGroup>\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <InputGroup>\r\n      <InputGroup.Addon>\r\n        <input type="checkbox" aria-label="..." />\r\n      </InputGroup.Addon>\r\n      <FormControl type="text" />\r\n    </InputGroup>\r\n  </FormGroup>\r\n</form>;\r\n'},420:function(e,t){"use strict";e.exports='<form>\r\n  <FormGroup bsSize="large">\r\n    <FormControl type="text" placeholder="Large text" />\r\n  </FormGroup>\r\n  <FormGroup>\r\n    <FormControl type="text" placeholder="Normal text" />\r\n  </FormGroup>\r\n  <FormGroup bsSize="small">\r\n    <FormControl type="text" placeholder="Small text" />\r\n  </FormGroup>\r\n</form>;\r\n'},421:function(e,t){"use strict";e.exports='<form>\r\n  <FormGroup controlId="formValidationSuccess1" validationState="success">\r\n    <ControlLabel>Input with success</ControlLabel>\r\n    <FormControl type="text" />\r\n    <HelpBlock>Help text with validation state.</HelpBlock>\r\n  </FormGroup>\r\n\r\n  <FormGroup controlId="formValidationWarning1" validationState="warning">\r\n    <ControlLabel>Input with warning</ControlLabel>\r\n    <FormControl type="text" />\r\n  </FormGroup>\r\n\r\n  <FormGroup controlId="formValidationError1" validationState="error">\r\n    <ControlLabel>Input with error</ControlLabel>\r\n    <FormControl type="text" />\r\n  </FormGroup>\r\n\r\n  <FormGroup controlId="formValidationNull" validationState={null}>\r\n    <ControlLabel>Input with no validation state</ControlLabel>\r\n    <FormControl type="text" />\r\n  </FormGroup>\r\n\r\n  <FormGroup controlId="formValidationSuccess2" validationState="success">\r\n    <ControlLabel>Input with success and feedback icon</ControlLabel>\r\n    <FormControl type="text" />\r\n    <FormControl.Feedback />\r\n  </FormGroup>\r\n\r\n  <FormGroup controlId="formValidationWarning2" validationState="warning">\r\n    <ControlLabel>Input with warning and feedback icon</ControlLabel>\r\n    <FormControl type="text" />\r\n    <FormControl.Feedback />\r\n  </FormGroup>\r\n\r\n  <FormGroup controlId="formValidationError2" validationState="error">\r\n    <ControlLabel>Input with error and feedback icon</ControlLabel>\r\n    <FormControl type="text" />\r\n    <FormControl.Feedback />\r\n  </FormGroup>\r\n\r\n  <FormGroup controlId="formValidationSuccess3" validationState="success">\r\n    <ControlLabel>Input with success and custom feedback icon</ControlLabel>\r\n    <FormControl type="text" />\r\n    <FormControl.Feedback>\r\n      <Glyphicon glyph="music" />\r\n    </FormControl.Feedback>\r\n  </FormGroup>\r\n\r\n  <FormGroup controlId="formValidationWarning3" validationState="warning">\r\n    <ControlLabel>Input group with warning</ControlLabel>\r\n    <InputGroup>\r\n      <InputGroup.Addon>@</InputGroup.Addon>\r\n      <FormControl type="text" />\r\n    </InputGroup>\r\n    <FormControl.Feedback />\r\n  </FormGroup>\r\n\r\n  <Form componentClass="fieldset" horizontal>\r\n    <FormGroup controlId="formValidationError3" validationState="error">\r\n      <Col componentClass={ControlLabel} xs={3}>\r\n        Input with error\r\n      </Col>\r\n      <Col xs={9}>\r\n        <FormControl type="text" />\r\n        <FormControl.Feedback />\r\n      </Col>\r\n    </FormGroup>\r\n\r\n    <FormGroup controlId="formValidationSuccess4" validationState="success">\r\n      <Col componentClass={ControlLabel} xs={3}>\r\n        Input group with success\r\n      </Col>\r\n      <Col xs={9}>\r\n        <InputGroup>\r\n          <InputGroup.Addon>@</InputGroup.Addon>\r\n          <FormControl type="text" />\r\n        </InputGroup>\r\n        <FormControl.Feedback />\r\n      </Col>\r\n    </FormGroup>\r\n  </Form>\r\n\r\n  <Form componentClass="fieldset" inline>\r\n    <FormGroup controlId="formValidationWarning4" validationState="warning">\r\n      <ControlLabel>Input with warning</ControlLabel>{\' \'}\r\n      <FormControl type="text" />\r\n      <FormControl.Feedback />\r\n    </FormGroup>{\' \'}\r\n    <FormGroup controlId="formValidationError4" validationState="error">\r\n      <ControlLabel>Input group with error</ControlLabel>{\' \'}\r\n      <InputGroup>\r\n        <InputGroup.Addon>@</InputGroup.Addon>\r\n        <FormControl type="text" />\r\n      </InputGroup>\r\n      <FormControl.Feedback />\r\n    </FormGroup>\r\n  </Form>\r\n\r\n  <Checkbox validationState="success">Checkbox with success</Checkbox>\r\n  <Radio validationState="warning">Radio with warning</Radio>\r\n  <Checkbox validationState="error">Checkbox with error</Checkbox>\r\n\r\n  {/* This requires React 15\'s <span>-less spaces to be exactly correct. */}\r\n  <FormGroup validationState="success">\r\n    <Checkbox inline>Checkbox</Checkbox> <Checkbox inline>with</Checkbox>{\' \'}\r\n    <Checkbox inline>success</Checkbox>\r\n  </FormGroup>\r\n</form>;\r\n'},514:function(e,t,r){"use strict";function o(e){return e&&e.__esModule?e:{default:e}}function n(e){var t=e.data;return a.default.createElement("div",{className:"bs-docs-section"},a.default.createElement("h2",{className:"page-header"},a.default.createElement(d.default,{id:"forms"},"Forms")," ",a.default.createElement("small",null,"FormGroup, FormControl, ControlLabel")),a.default.createElement("p",null,"The ",a.default.createElement("code",null,"<FormControl>")," component renders a form control with Bootstrap styling. The ",a.default.createElement("code",null,"<FormGroup>")," component wraps a form control with proper spacing, along with support for a label, help text, and validation state. To ensure accessibility, set"," ",a.default.createElement("code",null,"controlId")," on ",a.default.createElement("code",null,"<FormGroup>"),", and use"," ",a.default.createElement("code",null,"<ControlLabel>")," for the label."),a.default.createElement(f.default,{codeText:C.default}),a.default.createElement("p",null,"The ",a.default.createElement("code",null,"<FormControl>")," component directly renders the"," ",a.default.createElement("code",null,"<input>")," or other specified component. If you need to access the value of an uncontrolled ",a.default.createElement("code",null,"<FormControl>"),", attach a ",a.default.createElement("code",null,"ref")," to it as you would with an uncontrolled input, then call ",a.default.createElement("code",null,"ReactDOM.findDOMNode(ref)")," to get the DOM node. You can then interact with that node as you would with any other uncontrolled input."),a.default.createElement("p",null,"If your application contains a large number of form groups, we recommend building a higher-level component encapsulating a complete field group that renders the label, the control, and any other necessary components. We don't provide this out-of-the-box, because the composition of those field groups is too specific to an individual application to admit a good one-size-fits-all solution."),a.default.createElement("h3",null,a.default.createElement(d.default,{id:"forms-props"},"Props")),a.default.createElement("h4",null,a.default.createElement(d.default,{id:"forms-props-form-group"},"FormGroup"),a.default.createElement(p.default,{component:t.FormGroup.displayName})),a.default.createElement(i.default,{metadata:t.FormGroup}),a.default.createElement("h4",null,a.default.createElement(d.default,{id:"forms-props-form-control"},"FormControl"),a.default.createElement(p.default,{component:t.FormControl.displayName})),a.default.createElement(i.default,{metadata:t.FormControl}),a.default.createElement("h4",null,a.default.createElement(d.default,{id:"forms-props-control-label"},"ControlLabel"),a.default.createElement(p.default,{component:t.ControlLabel.displayName})),a.default.createElement(i.default,{metadata:t.ControlLabel}),a.default.createElement("h2",{className:"page-header"},a.default.createElement(d.default,{id:"forms-controls"},"Supported controls")," ",a.default.createElement("small",null,"Checkbox, Radio, FormControl.Static, HelpBlock")),a.default.createElement("p",null,"Examples of standard form controls supported in an example form layout, using a custom ",a.default.createElement("code",null,"<FieldGroup>")," component. Use"," ",a.default.createElement("code",null,"<FormControl>")," for ",a.default.createElement("code",null,"<input>"),","," ",a.default.createElement("code",null,"<textarea>"),", and ",a.default.createElement("code",null,"<select>"),". Use"," ",a.default.createElement("code",null,"<Checkbox>")," and ",a.default.createElement("code",null,"<Radio>")," for checkboxes and radios respectively, optionally with ",a.default.createElement("code",null,"inline")," to render multiple on the same line. Use ",a.default.createElement("code",null,"<FormControl.Static>")," for static text."),a.default.createElement(f.default,{codeText:E.default}),a.default.createElement("h3",null,a.default.createElement(d.default,{id:"forms-controls-props"},"Props")),a.default.createElement("h4",null,a.default.createElement(d.default,{id:"forms-props-checkbox"},"Checkbox"),a.default.createElement(p.default,{component:t.Checkbox.displayName})),a.default.createElement(i.default,{metadata:t.Checkbox}),a.default.createElement("h4",null,a.default.createElement(d.default,{id:"forms-props-radio"},"Radio"),a.default.createElement(p.default,{component:t.Radio.displayName})),a.default.createElement(i.default,{metadata:t.Radio}),a.default.createElement("h4",null,a.default.createElement(d.default,{id:"forms-props-form-control-static"},"FormControl.Static"),a.default.createElement(p.default,{component:t.FormControlStatic.displayName})),a.default.createElement(i.default,{metadata:t.FormControlStatic}),a.default.createElement("h4",null,a.default.createElement(d.default,{id:"forms-props-help-block"},"HelpBlock"),a.default.createElement(p.default,{component:t.HelpBlock.displayName})),a.default.createElement(i.default,{metadata:t.HelpBlock}),a.default.createElement("h2",{className:"page-header"},a.default.createElement(d.default,{id:"forms-layout"},"Form layout")," ",a.default.createElement("small",null,"Form")),a.default.createElement("h3",null,a.default.createElement(d.default,{id:"forms-inline"},"Inline forms")),a.default.createElement("p",null,"Use ",a.default.createElement("code",null,"<Form inline>")," instead of ",a.default.createElement("code",null,"<form>"),". JSX strips whitespace between lines, so you will need to manually add spaces. Additionally, Bootstrap assigns inline form controls"," ",a.default.createElement("code",null,"width: auto")," by default, so you may need to set custom widths."),a.default.createElement(f.default,{codeText:b.default}),a.default.createElement("h3",null,a.default.createElement(d.default,{id:"forms-horizontal"},"Horizontal forms")),a.default.createElement("p",null,"Use ",a.default.createElement("code",null,"<Form horizontal>")," instead of"," ",a.default.createElement("code",null,"<form>"),", then use ",a.default.createElement("code",null,"<Col>"),"s to align labels and controls. Do not use ",a.default.createElement("code",null,"<Row>")," here, as"," ",a.default.createElement("code",null,"<FormGroup>")," will already serve as a grid row in a horizontal form."),a.default.createElement(f.default,{codeText:I.default}),a.default.createElement("h3",null,a.default.createElement(d.default,{id:"forms-layout-props"},"Props")),a.default.createElement("h4",null,a.default.createElement(d.default,{id:"forms-props-form"},"Form"),a.default.createElement(p.default,{component:t.Form.displayName}),a.default.createElement("small",null,"(only needed for horizontal or inline forms)")),a.default.createElement(i.default,{metadata:t.Form}),a.default.createElement("h2",{className:"page-header"},a.default.createElement(d.default,{id:"forms-input-groups"},"Input groups"),a.default.createElement("small",null,"InputGroup, InputGroup.Addon, InputGroup.Button")),a.default.createElement("h3",null,a.default.createElement(d.default,{id:"forms-input-addons"},"Input add-ons")),a.default.createElement("p",null,"Wrap your form control in an ",a.default.createElement("code",null,"<InputGroup>"),", then use for normal add-ons and for button add-ons. Exotic configurations may require CSS on your side."),a.default.createElement(f.default,{codeText:w.default}),a.default.createElement("h3",null,a.default.createElement(d.default,{id:"forms-input-sizes"},"Input sizes")),a.default.createElement("p",null,"Use ",a.default.createElement("code",null,"bsSize")," on ",a.default.createElement("code",null,"<FormGroup>")," or"," ",a.default.createElement("code",null,"<InputGroup>")," to change the size of inputs. It also works with add-ons and most other options."),a.default.createElement(f.default,{codeText:g.default}),a.default.createElement("h3",null,a.default.createElement(d.default,{id:"forms-input-groups-props"},"Props")),a.default.createElement("h4",null,a.default.createElement(d.default,{id:"forms-props-input-group"},"InputGroup"),a.default.createElement(p.default,{component:t.InputGroup.displayName})),a.default.createElement(i.default,{metadata:t.InputGroup}),a.default.createElement("h4",null,a.default.createElement(d.default,{id:"forms-props-input-group-addon"},"InputGroup.Addon"),a.default.createElement(p.default,{component:t.InputGroupAddon.displayName})),a.default.createElement(i.default,{metadata:t.InputGroupAddon}),a.default.createElement("h4",null,a.default.createElement(d.default,{id:"forms-props-input-group-button"},"InputGroup.Button"),a.default.createElement(p.default,{component:t.InputGroupButton.displayName})),a.default.createElement(i.default,{metadata:t.InputGroupButton}),a.default.createElement("h2",{className:"page-header"},a.default.createElement(d.default,{id:"forms-validation"},"Validation states"),a.default.createElement("small",null,"FormControl.Feedback")),a.default.createElement("p",null,"Set ",a.default.createElement("code",null,"validationState")," to one of ",a.default.createElement("code",null,"'success'"),","," ",a.default.createElement("code",null,"'warning'")," or ",a.default.createElement("code",null,"'error'")," to show validation state. Set ",a.default.createElement("code",null,"validationState")," to ",a.default.createElement("code",null,"null")," (or"," ",a.default.createElement("code",null,"undefined"),") to hide validation state. Add"," ",a.default.createElement("code",null,"<FormControl.Feedback>")," for a feedback icon when validation state is set."),a.default.createElement(f.default,{codeText:S.default}),a.default.createElement("h3",null,a.default.createElement(d.default,{id:"forms-validation-props"},"Props")),a.default.createElement("h4",null,a.default.createElement(d.default,{id:"forms-props-form-control-feedback"},"FormControl.Feedback"),a.default.createElement(p.default,{component:t.FormControlFeedback.displayName})),a.default.createElement(i.default,{metadata:t.FormControlFeedback}))}t.__esModule=!0,t.query=void 0,t.default=n;var l=r(1),a=o(l),u=r(12),d=o(u),m=r(17),p=o(m),c=r(14),i=o(c),s=r(13),f=o(s),F=r(415),C=o(F),h=r(416),E=o(h),G=r(418),b=o(G),x=r(417),I=o(x),y=r(420),g=o(y),k=r(419),w=o(k),v=r(421),S=o(v);t.query="** extracted graphql fragment **"}});
//# sourceMappingURL=component---src-pages-components-forms-js-765b1f9821963411ba86.js.map